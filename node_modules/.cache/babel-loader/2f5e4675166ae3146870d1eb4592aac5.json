{"ast":null,"code":"var _jsxFileName = \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\src\\\\components\\\\Loan\\\\Cards.js\";\nimport React from \"react\";\nimport Loader from \"../Common/Loader\";\nimport * as utils from \"../Util\";\n\nvar Cards = function Cards(props) {\n  var loans = props.loans;\n  var currentUser = props.authUser;\n  var settings = props.settings;\n  var cards = props.cards;\n  var loanToPay = 0;\n  var loanToGet = 0;\n\n  if (!loans && !currentUser) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n  if (loans && currentUser) {\n    var eachExpense = utils.eachExpense(loans);\n    var thisUsersLoans = utils.currentUsersExpenses(eachExpense, currentUser); // You need to get\n\n    loanToPay = utils.loanTakenOrGivenAmt(thisUsersLoans, \"Taken\"); // You need to give\n\n    loanToGet = utils.loanTakenOrGivenAmt(thisUsersLoans, \"Given\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row mobileNoPadding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-sm-3 mobileNoPadding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card card1 mobileNoPadding\",\n    style: props.cards.card1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"You need to repay\"), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa \".concat(utils.setCurrencyIcon(settings.currency)),\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \" \", loanToPay.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\"))))), React.createElement(\"div\", {\n    className: \"col-sm-3 mobileNoPadding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card card2 mobileNoPadding\",\n    style: props.cards.card2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"You need to get \"), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa \".concat(utils.setCurrencyIcon(settings.currency)),\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \" \", loanToGet.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\"))))));\n};\n\nexport default Cards;","map":{"version":3,"sources":["G:\\Workspace\\2018\\expense-manager-react\\src\\components\\Loan\\Cards.js"],"names":["React","Loader","utils","Cards","props","loans","currentUser","authUser","settings","cards","loanToPay","loanToGet","eachExpense","thisUsersLoans","currentUsersExpenses","loanTakenOrGivenAmt","card1","setCurrencyIcon","currency","toString","replace","card2"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Loader from \"../Common/Loader\";\r\nimport * as utils from \"../Util\";\r\n\r\nconst Cards = props => {\r\n    let loans = props.loans;\r\n    let currentUser = props.authUser;\r\n    let settings = props.settings;\r\n    let cards = props.cards;\r\n    let loanToPay = 0;\r\n    let loanToGet = 0;\r\n\r\n    if (!loans && !currentUser) {\r\n        return (\r\n            <div>\r\n                <Loader />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (loans && currentUser) {\r\n        const eachExpense = utils.eachExpense(loans);\r\n        const thisUsersLoans = utils.currentUsersExpenses(eachExpense, currentUser);\r\n\r\n        // You need to get\r\n        loanToPay = utils.loanTakenOrGivenAmt(thisUsersLoans, \"Taken\");\r\n\r\n        // You need to give\r\n        loanToGet = utils.loanTakenOrGivenAmt(thisUsersLoans, \"Given\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mobileNoPadding\">\r\n            <div className=\"col-sm-3 mobileNoPadding\">\r\n                <div className=\"card card1 mobileNoPadding\" style={props.cards.card1}>\r\n                    <div className=\"card-block\">\r\n                        <h3 className=\"card-title\">You need to repay</h3>\r\n                        <p className=\"card-text\">\r\n                            <i className={`fa ${utils.setCurrencyIcon(settings.currency)}`} aria-hidden=\"true\" />{\" \"}\r\n                            {loanToPay.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\")}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-3 mobileNoPadding\">\r\n                <div className=\"card card2 mobileNoPadding\" style={props.cards.card2}>\r\n                    <div className=\"card-block\">\r\n                        <h3 className=\"card-title\">You need to get </h3>\r\n                        <p className=\"card-text\">\r\n                            <i className={`fa ${utils.setCurrencyIcon(settings.currency)}`} aria-hidden=\"true\" />{\" \"}\r\n                            {loanToGet.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\")}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}