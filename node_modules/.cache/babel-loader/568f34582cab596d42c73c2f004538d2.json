{"ast":null,"code":"import _objectSpread from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\src\\\\components\\\\Statistics\\\\CategoryTotalCard.js\";\nimport React, { Component } from \"react\";\nimport * as utils from \"../Util\";\nimport Loader from \"../Common/Loader\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Trianglify from \"trianglify\";\n\nvar CategoryTotalCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CategoryTotalCard, _Component);\n\n  function CategoryTotalCard(props) {\n    var _this;\n\n    _classCallCheck(this, CategoryTotalCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoryTotalCard).call(this, props));\n    _this.state = {\n      year: moment(new Date()).get(\"year\")\n    };\n    return _this;\n  }\n\n  _createClass(CategoryTotalCard, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var change = {};\n      change[e.target.name] = e.target.value;\n      this.setState(change);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pad0 = {\n        padding: \"0\"\n      };\n      var category = {\n        width: window.screen.width <= 760 ? \"46.5%\" : \"15.8%\",\n        display: \"inline-block\",\n        margin: \"5px\",\n        color: \"#ddd\",\n        background: \"#34495E\",\n        padding: \"5px\",\n        borderLeft: \"5px solid #34495E\",\n        borderRight: \"5px solid #34495E\"\n      };\n      var categoryExpense = {\n        fontSize: \"25px\",\n        float: \"right\",\n        paddingRight: \"5px\"\n      };\n      var lessFont = {\n        fontSize: \"15px\",\n        float: \"left\",\n        marginTop: \"10px\",\n        marginLeft: \"5px\",\n        color: \"rgba(255,255,255,.45)\"\n      };\n      var expenses = this.props.expenses;\n      var currentUser = this.props.authUser;\n      var selectedYear = this.state.year;\n      var allCategoryTotals = null;\n      var categoryList = null;\n      var patternconfig = {\n        height: 300,\n        width: 1500,\n        cell_size: Math.floor(Math.random() * 250) + 50\n      }; // palette: Trianglify.colorbrewer,\n\n      var pattern = Trianglify(_objectSpread({}, patternconfig));\n      var card4 = {\n        backgroundImage: \"url(\".concat(pattern.png(), \")\")\n      };\n      var monthDropdown = {\n        display: \"block\",\n        background: \"#DDDDDD\",\n        float: \"right\",\n        color: \"#000\",\n        border: \"none\",\n        padding: \"0px 5px 0px 0px\"\n      };\n      var formStyle = {\n        position: \"absolute\",\n        top: \"0\",\n        padding: \"15px\",\n        right: \"-15px\",\n        zIndex: \"9\"\n      };\n\n      if (!expenses || !currentUser) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n\n      if (expenses && currentUser && selectedYear) {\n        var eachExpense = utils.eachExpense(expenses);\n        var thisUsersExpenses = utils.currentUsersExpenses(eachExpense, currentUser); // dropdown selection all / any year\n\n        if (selectedYear == \"all\") {\n          allCategoryTotals = utils.calculateTotalForAllCategories(thisUsersExpenses);\n        } else {\n          allCategoryTotals = utils.calculateTotalForAllCategories(utils.expensesinSelectedYear(eachExpense, currentUser, selectedYear.toString()));\n        }\n\n        var eachCategory = function eachCategory(allCategoryTotals) {\n          return Object.keys(allCategoryTotals).map(function (key) {\n            return {\n              key: key,\n              value: allCategoryTotals[key]\n            };\n          });\n        };\n\n        categoryList = eachCategory(allCategoryTotals).map(function (el, i) {\n          if (el.value) {\n            if (selectedYear === \"all\") {\n              return React.createElement(\"span\", {\n                style: category,\n                className: \"ttt\",\n                key: el.key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 108\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                style: utils.categoryName(el.key, \"card\"),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109\n                },\n                __self: this\n              }, el.key), React.createElement(\"i\", {\n                className: \"fa fa-\".concat(utils.categoryIcon(el.key)),\n                style: lessFont,\n                \"aria-hidden\": \"true\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 110\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                style: categoryExpense,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              }, el.value.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\")));\n            } else {\n              return React.createElement(Link, {\n                key: i,\n                to: \"/filter-view?category=\".concat(el.key, \"&selectedYear=\").concat(selectedYear, \"&from=yearpage\"),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                style: category,\n                className: \"ttt\",\n                key: el.key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 123\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                style: utils.categoryName(el.key, \"card\"),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 124\n                },\n                __self: this\n              }, el.key), React.createElement(\"i\", {\n                className: \"fa fa-\".concat(utils.categoryIcon(el.key)),\n                style: lessFont,\n                \"aria-hidden\": \"true\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                style: categoryExpense,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 130\n                },\n                __self: this\n              }, el.value.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\"))));\n            }\n          } else {\n            return React.createElement(\"span\", {\n              key: el.key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138\n              },\n              __self: this\n            });\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        style: pad0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card4 mobileNoPadding\",\n        style: card4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: formStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"year\",\n        style: monthDropdown,\n        value: this.state.year,\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"All\"), utils.yearsGenereator().map(function (elem, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: elem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, elem);\n      })))), React.createElement(\"div\", {\n        className: \"card-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Each Category\"), React.createElement(\"ul\", {\n        style: pad0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, categoryList))));\n    }\n  }]);\n\n  return CategoryTotalCard;\n}(Component);\n\nexport default CategoryTotalCard;","map":{"version":3,"sources":["G:\\Workspace\\2018\\expense-manager-react\\src\\components\\Statistics\\CategoryTotalCard.js"],"names":["React","Component","utils","Loader","Link","moment","Trianglify","CategoryTotalCard","props","state","year","Date","get","e","change","target","name","value","setState","pad0","padding","category","width","window","screen","display","margin","color","background","borderLeft","borderRight","categoryExpense","fontSize","float","paddingRight","lessFont","marginTop","marginLeft","expenses","currentUser","authUser","selectedYear","allCategoryTotals","categoryList","patternconfig","height","cell_size","Math","floor","random","pattern","card4","backgroundImage","png","monthDropdown","border","formStyle","position","top","right","zIndex","eachExpense","thisUsersExpenses","currentUsersExpenses","calculateTotalForAllCategories","expensesinSelectedYear","toString","eachCategory","Object","keys","map","key","el","i","categoryName","categoryIcon","replace","handleChange","bind","yearsGenereator","elem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as utils from \"../Util\";\r\nimport Loader from \"../Common/Loader\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport moment from \"moment\";\r\nimport Trianglify from \"trianglify\";\r\n\r\nclass CategoryTotalCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { year: moment(new Date()).get(\"year\") };\r\n    }\r\n\r\n    handleChange(e) {\r\n        var change = {};\r\n        change[e.target.name] = e.target.value;\r\n        this.setState(change);\r\n    }\r\n\r\n    render() {\r\n        const pad0 = {\r\n            padding: \"0\"\r\n        };\r\n\r\n        const category = {\r\n            width: window.screen.width <= 760 ? \"46.5%\" : \"15.8%\",\r\n            display: \"inline-block\",\r\n            margin: \"5px\",\r\n            color: \"#ddd\",\r\n            background: \"#34495E\",\r\n            padding: \"5px\",\r\n            borderLeft: \"5px solid #34495E\",\r\n            borderRight: \"5px solid #34495E\"\r\n        };\r\n\r\n        const categoryExpense = {\r\n            fontSize: \"25px\",\r\n            float: \"right\",\r\n            paddingRight: \"5px\"\r\n        };\r\n\r\n        const lessFont = {\r\n            fontSize: \"15px\",\r\n            float: \"left\",\r\n            marginTop: \"10px\",\r\n            marginLeft: \"5px\",\r\n            color: \"rgba(255,255,255,.45)\"\r\n        };\r\n\r\n        let expenses = this.props.expenses;\r\n        let currentUser = this.props.authUser;\r\n        let selectedYear = this.state.year;\r\n\r\n        let allCategoryTotals = null;\r\n        let categoryList = null;\r\n\r\n        const patternconfig = { height: 300, width: 1500, cell_size: Math.floor(Math.random() * 250) + 50 }; // palette: Trianglify.colorbrewer,\r\n        const pattern = Trianglify({ ...patternconfig });\r\n        const card4 = { backgroundImage: `url(${pattern.png()})` };\r\n\r\n        const monthDropdown = {\r\n            display: \"block\",\r\n            background: \"#DDDDDD\",\r\n            float: \"right\",\r\n            color: \"#000\",\r\n            border: \"none\",\r\n            padding: \"0px 5px 0px 0px\"\r\n        };\r\n\r\n        const formStyle = {\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            padding: \"15px\",\r\n            right: \"-15px\",\r\n            zIndex: \"9\"\r\n        };\r\n\r\n        if (!expenses || !currentUser) {\r\n            return <Loader />;\r\n        }\r\n\r\n        if (expenses && currentUser && selectedYear) {\r\n            let eachExpense = utils.eachExpense(expenses);\r\n            let thisUsersExpenses = utils.currentUsersExpenses(eachExpense, currentUser);\r\n\r\n            // dropdown selection all / any year\r\n            if (selectedYear == \"all\") {\r\n                allCategoryTotals = utils.calculateTotalForAllCategories(thisUsersExpenses);\r\n            } else {\r\n                allCategoryTotals = utils.calculateTotalForAllCategories(\r\n                    utils.expensesinSelectedYear(eachExpense, currentUser, selectedYear.toString())\r\n                );\r\n            }\r\n\r\n            const eachCategory = allCategoryTotals => {\r\n                return Object.keys(allCategoryTotals).map(function (key) {\r\n                    return { key: key, value: allCategoryTotals[key] };\r\n                });\r\n            };\r\n\r\n            categoryList = eachCategory(allCategoryTotals).map((el, i) => {\r\n                if (el.value) {\r\n                    if (selectedYear === \"all\") {\r\n                        return (\r\n                            <span style={category} className=\"ttt\" key={el.key}>\r\n                                <div style={utils.categoryName(el.key, \"card\")}>{el.key}</div>\r\n                                <i\r\n                                    className={`fa fa-${utils.categoryIcon(el.key)}`}\r\n                                    style={lessFont}\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                                <div style={categoryExpense}>\r\n                                    {el.value.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\")}\r\n                                </div>\r\n                            </span>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <Link key={i} to={`/filter-view?category=${el.key}&selectedYear=${selectedYear}&from=yearpage`}>\r\n                                <span style={category} className=\"ttt\" key={el.key}>\r\n                                    <div style={utils.categoryName(el.key, \"card\")}>{el.key}</div>\r\n                                    <i\r\n                                        className={`fa fa-${utils.categoryIcon(el.key)}`}\r\n                                        style={lessFont}\r\n                                        aria-hidden=\"true\"\r\n                                    />\r\n                                    <div style={categoryExpense}>\r\n                                        {el.value.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\")}\r\n                                    </div>\r\n                                </span>\r\n                            </Link>\r\n                        );\r\n                    }\r\n                } else {\r\n                    return <span key={el.key} />;\r\n                }\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"col-sm-12\" style={pad0}>\r\n                <div className=\"card card4 mobileNoPadding\" style={card4}>\r\n                    <form style={formStyle}>\r\n                        <div className=\"col-sm-12 col-xs-12\">\r\n                            <select\r\n                                name=\"year\"\r\n                                style={monthDropdown}\r\n                                value={this.state.year}\r\n                                onChange={this.handleChange.bind(this)}\r\n                            >\r\n                                <option value=\"all\">All</option>\r\n                                {utils.yearsGenereator().map((elem, i) => (\r\n                                    <option key={i} value={elem}>{elem}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"card-block\">\r\n                        <h3 className=\"card-title\">Each Category</h3>\r\n                        <ul style={pad0}>{categoryList}</ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryTotalCard;\r\n"]},"metadata":{},"sourceType":"module"}