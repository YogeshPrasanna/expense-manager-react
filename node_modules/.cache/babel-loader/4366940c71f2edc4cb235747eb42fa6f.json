{"ast":null,"code":"import _classCallCheck from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\src\\\\components\\\\Home\\\\BarChartAllMonths.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport * as utils from \"../Util\";\n\nvar BarChartAllMonths =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BarChartAllMonths, _Component);\n\n  function BarChartAllMonths(props) {\n    var _this;\n\n    _classCallCheck(this, BarChartAllMonths);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BarChartAllMonths).call(this, props));\n    _this.state = {\n      year: new Date().getFullYear().toString()\n    };\n    return _this;\n  }\n\n  _createClass(BarChartAllMonths, [{\n    key: \"render\",\n    value: function render() {\n      var expenses = this.props.expenses;\n      var currentUser = this.props.authUser;\n      var selectedYear = this.state.year;\n\n      if (!expenses || !currentUser) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      }\n\n      if (expenses && currentUser) {\n        var eachExpense = utils.eachExpense(expenses);\n        var allMonthsTotals = utils.totalExpensesInEachMonthOfThisYear(expenses, eachExpense, currentUser, selectedYear);\n        var data = {\n          labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUNE\", \"JULY\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n          datasets: [{\n            data: allMonthsTotals,\n            borderColor: \"transparent\",\n            backgroundColor: \"rgb(0,0,0,0.15)\",\n            pointBackgroundColor: \"rgba(0,0,0,0)\",\n            pointBorderColor: \"rgba(0,0,0,0)\",\n            borderWidth: 4\n          }]\n        };\n        var barArea = {\n          background: \"rgba(0,0,0,0)\",\n          position: \"absolute\",\n          top: \"15px\",\n          right: \"15px\"\n        };\n        var options = {\n          scales: {\n            xAxes: [{\n              display: false\n            }],\n            yAxes: [{\n              display: false\n            }]\n          },\n          legend: {\n            display: false\n          },\n          tooltips: {\n            enabled: false\n          }\n        };\n        return React.createElement(\"div\", {\n          style: barArea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Line, {\n          data: data,\n          height: window.screen.width > 720 ? 140 : 250,\n          options: options,\n          responsive: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return BarChartAllMonths;\n}(Component);\n\nexport default BarChartAllMonths;","map":{"version":3,"sources":["G:\\Workspace\\2018\\expense-manager-react\\src\\components\\Home\\BarChartAllMonths.js"],"names":["React","Component","Line","utils","BarChartAllMonths","props","state","year","Date","getFullYear","toString","expenses","currentUser","authUser","selectedYear","eachExpense","allMonthsTotals","totalExpensesInEachMonthOfThisYear","data","labels","datasets","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","borderWidth","barArea","background","position","top","right","options","scales","xAxes","display","yAxes","legend","tooltips","enabled","window","screen","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;;IAEMC,iB;;;;;AACF,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,2FAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,QAAzB;AADG,KAAb;AAHe;AAMlB;;;;6BAEQ;AACL,UAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWM,QAA5B;AACA,UAAMC,WAAW,GAAG,KAAKP,KAAL,CAAWQ,QAA/B;AACA,UAAMC,YAAY,GAAG,KAAKR,KAAL,CAAWC,IAAhC;;AAEA,UAAI,CAACI,QAAD,IAAa,CAACC,WAAlB,EAA+B;AAC3B,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,UAAID,QAAQ,IAAIC,WAAhB,EAA6B;AACzB,YAAMG,WAAW,GAAGZ,KAAK,CAACY,WAAN,CAAkBJ,QAAlB,CAApB;AACA,YAAMK,eAAe,GAAGb,KAAK,CAACc,kCAAN,CACpBN,QADoB,EAEpBI,WAFoB,EAGpBH,WAHoB,EAIpBE,YAJoB,CAAxB;AAOA,YAAMI,IAAI,GAAG;AACTC,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,MAApC,EAA4C,MAA5C,EAAoD,KAApD,EAA2D,KAA3D,EAAkE,KAAlE,EAAyE,KAAzE,EAAgF,KAAhF,CADC;AAETC,UAAAA,QAAQ,EAAE,CACN;AACIF,YAAAA,IAAI,EAAEF,eADV;AAEIK,YAAAA,WAAW,EAAE,aAFjB;AAGIC,YAAAA,eAAe,EAAE,iBAHrB;AAIIC,YAAAA,oBAAoB,EAAE,eAJ1B;AAKIC,YAAAA,gBAAgB,EAAE,eALtB;AAMIC,YAAAA,WAAW,EAAE;AANjB,WADM;AAFD,SAAb;AAcA,YAAMC,OAAO,GAAG;AACZC,UAAAA,UAAU,EAAE,eADA;AAEZC,UAAAA,QAAQ,EAAE,UAFE;AAGZC,UAAAA,GAAG,EAAE,MAHO;AAIZC,UAAAA,KAAK,EAAE;AAJK,SAAhB;AAOA,YAAMC,OAAO,GAAG;AACZC,UAAAA,MAAM,EAAE;AACJC,YAAAA,KAAK,EAAE,CACH;AACIC,cAAAA,OAAO,EAAE;AADb,aADG,CADH;AAMJC,YAAAA,KAAK,EAAE,CACH;AACID,cAAAA,OAAO,EAAE;AADb,aADG;AANH,WADI;AAaZE,UAAAA,MAAM,EAAE;AACJF,YAAAA,OAAO,EAAE;AADL,WAbI;AAgBZG,UAAAA,QAAQ,EAAE;AACNC,YAAAA,OAAO,EAAE;AADH;AAhBE,SAAhB;AAqBA,eACI;AAAK,UAAA,KAAK,EAAEZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AACI,UAAA,IAAI,EAAER,IADV;AAEI,UAAA,MAAM,EAAEqB,MAAM,CAACC,MAAP,CAAcC,KAAd,GAAsB,GAAtB,GAA4B,GAA5B,GAAkC,GAF9C;AAGI,UAAA,OAAO,EAAEV,OAHb;AAII,UAAA,UAAU,EAAE,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAUH;AACJ;;;;EAhF2B9B,S;;AAmFhC,eAAeG,iBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport * as utils from \"../Util\";\r\n\r\nclass BarChartAllMonths extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            year: new Date().getFullYear().toString()\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const expenses = this.props.expenses;\r\n        const currentUser = this.props.authUser;\r\n        const selectedYear = this.state.year;\r\n\r\n        if (!expenses || !currentUser) {\r\n            return <span />;\r\n        }\r\n\r\n        if (expenses && currentUser) {\r\n            const eachExpense = utils.eachExpense(expenses);\r\n            const allMonthsTotals = utils.totalExpensesInEachMonthOfThisYear(\r\n                expenses,\r\n                eachExpense,\r\n                currentUser,\r\n                selectedYear\r\n            );\r\n\r\n            const data = {\r\n                labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUNE\", \"JULY\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n                datasets: [\r\n                    {\r\n                        data: allMonthsTotals,\r\n                        borderColor: \"transparent\",\r\n                        backgroundColor: \"rgb(0,0,0,0.15)\",\r\n                        pointBackgroundColor: \"rgba(0,0,0,0)\",\r\n                        pointBorderColor: \"rgba(0,0,0,0)\",\r\n                        borderWidth: 4\r\n                    }\r\n                ]\r\n            };\r\n\r\n            const barArea = {\r\n                background: \"rgba(0,0,0,0)\",\r\n                position: \"absolute\",\r\n                top: \"15px\",\r\n                right: \"15px\"\r\n            };\r\n\r\n            const options = {\r\n                scales: {\r\n                    xAxes: [\r\n                        {\r\n                            display: false\r\n                        }\r\n                    ],\r\n                    yAxes: [\r\n                        {\r\n                            display: false\r\n                        }\r\n                    ]\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                tooltips: {\r\n                    enabled: false\r\n                }\r\n            };\r\n\r\n            return (\r\n                <div style={barArea}>\r\n                    <Line\r\n                        data={data}\r\n                        height={window.screen.width > 720 ? 140 : 250}\r\n                        options={options}\r\n                        responsive={true}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default BarChartAllMonths;\r\n"]},"metadata":{},"sourceType":"module"}