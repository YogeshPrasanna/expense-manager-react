{"ast":null,"code":"import { db } from \"./firebase\"; // the user is created as an object with the username and email properties.Furthermore,\n// it is stored on the users / ${ id } resource path.\n// So whenever you would want to retrieve a specific user from the Firebase database,\n// you could get the one user via its unique identifier and the entity resource path.\n\nvar doCreateUser = function doCreateUser(id, username, email) {\n  return db.ref(\"users/\".concat(id)).set({\n    username: username,\n    email: email\n  });\n}; // users are retrieved from the general userâ€™s entity resource path.\n// The function will return all users from the Firebase realtime database.\n\n\nvar onceGetUsers = function onceGetUsers() {\n  return db.ref(\"users\").once(\"value\");\n};\n\nvar doCreateExpense = function doCreateExpense(uid, date, expense, category, comments, day) {\n  db.ref(\"expenseTable/\".concat(uid)).push().set({\n    uid: uid,\n    date: date,\n    expense: expense,\n    category: category,\n    comments: comments,\n    day: day\n  });\n}; // Create an expense table , this happens for first time\n\n\nvar doCreateExpenseTable = function doCreateExpenseTable(uid, date, expense, category, comments, day, key) {\n  db.ref(\"expenseTable/\".concat(uid, \"/\").concat(key)).set({\n    uid: uid,\n    date: date,\n    expense: expense,\n    category: category,\n    comments: comments,\n    day: day\n  });\n}; // Create an saving table , this happens for first time\n\n\nvar doCreateSavingsTable = function doCreateSavingsTable(uid, date, goalAmount, savingAmount, savingFor, comments, day, goalAchieved, cardColor, key) {\n  db.ref(\"savingsTable/\".concat(uid, \"/\").concat(key)).set({\n    uid: uid,\n    date: date,\n    goalAmount: goalAmount,\n    savingAmount: savingAmount,\n    savingFor: savingFor,\n    comments: comments,\n    goalAchieved: goalAchieved,\n    cardColor: cardColor,\n    day: day\n  });\n};\n\nvar doCreateSaving = function doCreateSaving(uid, date, goalAmount, savingAmount, savingFor, comments, goalAchieved, cardColor, day) {\n  db.ref(\"savingsTable/\".concat(uid)).push().set({\n    uid: uid,\n    date: date,\n    goalAmount: goalAmount,\n    savingAmount: savingAmount,\n    savingFor: savingFor,\n    comments: comments,\n    goalAchieved: goalAchieved,\n    cardColor: cardColor,\n    day: day\n  });\n};\n\nvar onceGetExpenses = function onceGetExpenses() {\n  return db.ref(\"expenses\").once(\"value\");\n};\n\nvar onceGetLoans = function onceGetLoans() {\n  return db.ref(\"loans\").once(\"value\");\n};\n\nvar doCreateLoan = function doCreateLoan(uid, date, amount, loanType, reason, person, day, status) {\n  db.ref(\"loanTable/\".concat(uid)).push().set({\n    uid: uid,\n    date: date,\n    amount: amount,\n    loanType: loanType,\n    reason: reason,\n    person: person,\n    day: day,\n    status: status\n  });\n};\n\nvar doCreateLoanTable = function doCreateLoanTable(uid, date, amount, loanType, reason, person, day, status, key) {\n  db.ref(\"loanTable/\".concat(uid, \"/\").concat(key)).set({\n    uid: uid,\n    date: date,\n    amount: amount,\n    loanType: loanType,\n    reason: reason,\n    person: person,\n    day: day,\n    status: status\n  });\n};\n\nvar doCreateSettingsForUser = function doCreateSettingsForUser(uid, font, mode, currency, travelMode, fromCurrency, monthLimit) {\n  return db.ref(\"settings/\".concat(uid)).set({\n    font: font,\n    mode: mode,\n    currency: currency,\n    travelMode: travelMode,\n    fromCurrency: fromCurrency,\n    monthLimit: monthLimit\n  });\n}; //  const expensesRef = db.ref('expenses')\n//     expensesRef.on('child_removed', function (data) {\n//         console.log(\"child_removed\")\n//     });\n// const allExpenses = () => {\n//     return onceGetExpenses().then((data) => {\n//          console.log(data.val())\n//         }).catch(error => {\n//             console.log(error)\n//         });\n// }\n\n\nexport { doCreateUser, onceGetUsers, doCreateExpense, doCreateExpenseTable, onceGetExpenses, onceGetLoans, doCreateLoan, doCreateLoanTable, doCreateSettingsForUser, doCreateSavingsTable, doCreateSaving };","map":{"version":3,"sources":["G:\\Workspace\\2018\\expense-manager-react\\src\\firebase\\db.js"],"names":["db","doCreateUser","id","username","email","ref","set","onceGetUsers","once","doCreateExpense","uid","date","expense","category","comments","day","push","doCreateExpenseTable","key","doCreateSavingsTable","goalAmount","savingAmount","savingFor","goalAchieved","cardColor","doCreateSaving","onceGetExpenses","onceGetLoans","doCreateLoan","amount","loanType","reason","person","status","doCreateLoanTable","doCreateSettingsForUser","font","mode","currency","travelMode","fromCurrency","monthLimit"],"mappings":"AAAA,SAASA,EAAT,QAAmB,YAAnB,C,CAEA;AACA;AACA;AACA;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAKC,QAAL,EAAeC,KAAf;AAAA,SACjBJ,EAAE,CAACK,GAAH,iBAAgBH,EAAhB,GAAsBI,GAAtB,CAA0B;AACtBH,IAAAA,QAAQ,EAARA,QADsB;AAEtBC,IAAAA,KAAK,EAALA;AAFsB,GAA1B,CADiB;AAAA,CAArB,C,CAMA;AACA;;;AACA,IAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMP,EAAE,CAACK,GAAH,CAAO,OAAP,EAAgBG,IAAhB,CAAqB,OAArB,CAAN;AAAA,CAArB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,GAAzC,EAAiD;AACrEf,EAAAA,EAAE,CAACK,GAAH,wBAAuBK,GAAvB,GACKM,IADL,GAEKV,GAFL,CAES;AAAEI,IAAAA,GAAG,EAAHA,GAAF;AAAOC,IAAAA,IAAI,EAAJA,IAAP;AAAaC,IAAAA,OAAO,EAAPA,OAAb;AAAsBC,IAAAA,QAAQ,EAARA,QAAtB;AAAgCC,IAAAA,QAAQ,EAARA,QAAhC;AAA0CC,IAAAA,GAAG,EAAHA;AAA1C,GAFT;AAGH,CAJD,C,CAMA;;;AACA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACP,GAAD,EAAMC,IAAN,EAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,GAAzC,EAA8CG,GAA9C,EAAsD;AAC/ElB,EAAAA,EAAE,CAACK,GAAH,wBAAuBK,GAAvB,cAA8BQ,GAA9B,GAAqCZ,GAArC,CAAyC;AACrCI,IAAAA,GAAG,EAAHA,GADqC;AAErCC,IAAAA,IAAI,EAAJA,IAFqC;AAGrCC,IAAAA,OAAO,EAAPA,OAHqC;AAIrCC,IAAAA,QAAQ,EAARA,QAJqC;AAKrCC,IAAAA,QAAQ,EAARA,QALqC;AAMrCC,IAAAA,GAAG,EAAHA;AANqC,GAAzC;AAQH,CATD,C,CAWA;;;AACA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CACzBT,GADyB,EAEzBC,IAFyB,EAGzBS,UAHyB,EAIzBC,YAJyB,EAKzBC,SALyB,EAMzBR,QANyB,EAOzBC,GAPyB,EAQzBQ,YARyB,EASzBC,SATyB,EAUzBN,GAVyB,EAWxB;AACDlB,EAAAA,EAAE,CAACK,GAAH,wBAAuBK,GAAvB,cAA8BQ,GAA9B,GAAqCZ,GAArC,CAAyC;AACrCI,IAAAA,GAAG,EAAHA,GADqC;AAErCC,IAAAA,IAAI,EAAJA,IAFqC;AAGrCS,IAAAA,UAAU,EAAVA,UAHqC;AAIrCC,IAAAA,YAAY,EAAZA,YAJqC;AAKrCC,IAAAA,SAAS,EAATA,SALqC;AAMrCR,IAAAA,QAAQ,EAARA,QANqC;AAOrCS,IAAAA,YAAY,EAAZA,YAPqC;AAQrCC,IAAAA,SAAS,EAATA,SARqC;AASrCT,IAAAA,GAAG,EAAHA;AATqC,GAAzC;AAWH,CAvBD;;AAyBA,IAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACf,GAAD,EAAMC,IAAN,EAAYS,UAAZ,EAAwBC,YAAxB,EAAsCC,SAAtC,EAAiDR,QAAjD,EAA2DS,YAA3D,EAAyEC,SAAzE,EAAoFT,GAApF,EAA4F;AAC/Gf,EAAAA,EAAE,CAACK,GAAH,wBAAuBK,GAAvB,GACKM,IADL,GAEKV,GAFL,CAES;AAAEI,IAAAA,GAAG,EAAHA,GAAF;AAAOC,IAAAA,IAAI,EAAJA,IAAP;AAAaS,IAAAA,UAAU,EAAVA,UAAb;AAAyBC,IAAAA,YAAY,EAAZA,YAAzB;AAAuCC,IAAAA,SAAS,EAATA,SAAvC;AAAkDR,IAAAA,QAAQ,EAARA,QAAlD;AAA4DS,IAAAA,YAAY,EAAZA,YAA5D;AAA0EC,IAAAA,SAAS,EAATA,SAA1E;AAAqFT,IAAAA,GAAG,EAAHA;AAArF,GAFT;AAGH,CAJD;;AAMA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM1B,EAAE,CAACK,GAAH,CAAO,UAAP,EAAmBG,IAAnB,CAAwB,OAAxB,CAAN;AAAA,CAAxB;;AAEA,IAAMmB,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM3B,EAAE,CAACK,GAAH,CAAO,OAAP,EAAgBG,IAAhB,CAAqB,OAArB,CAAN;AAAA,CAArB;;AAEA,IAAMoB,YAAY,GAAG,SAAfA,YAAe,CAAClB,GAAD,EAAMC,IAAN,EAAYkB,MAAZ,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8CjB,GAA9C,EAAmDkB,MAAnD,EAA8D;AAC/EjC,EAAAA,EAAE,CAACK,GAAH,qBAAoBK,GAApB,GACKM,IADL,GAEKV,GAFL,CAES;AACDI,IAAAA,GAAG,EAAHA,GADC;AAEDC,IAAAA,IAAI,EAAJA,IAFC;AAGDkB,IAAAA,MAAM,EAANA,MAHC;AAIDC,IAAAA,QAAQ,EAARA,QAJC;AAKDC,IAAAA,MAAM,EAANA,MALC;AAMDC,IAAAA,MAAM,EAANA,MANC;AAODjB,IAAAA,GAAG,EAAHA,GAPC;AAQDkB,IAAAA,MAAM,EAANA;AARC,GAFT;AAYH,CAbD;;AAeA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACxB,GAAD,EAAMC,IAAN,EAAYkB,MAAZ,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,MAAtC,EAA8CjB,GAA9C,EAAmDkB,MAAnD,EAA2Df,GAA3D,EAAmE;AACzFlB,EAAAA,EAAE,CAACK,GAAH,qBAAoBK,GAApB,cAA2BQ,GAA3B,GAAkCZ,GAAlC,CAAsC;AAAEI,IAAAA,GAAG,EAAHA,GAAF;AAAOC,IAAAA,IAAI,EAAJA,IAAP;AAAakB,IAAAA,MAAM,EAANA,MAAb;AAAqBC,IAAAA,QAAQ,EAARA,QAArB;AAA+BC,IAAAA,MAAM,EAANA,MAA/B;AAAuCC,IAAAA,MAAM,EAANA,MAAvC;AAA+CjB,IAAAA,GAAG,EAAHA,GAA/C;AAAoDkB,IAAAA,MAAM,EAANA;AAApD,GAAtC;AACH,CAFD;;AAIA,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACzB,GAAD,EAAM0B,IAAN,EAAYC,IAAZ,EAAkBC,QAAlB,EAA4BC,UAA5B,EAAwCC,YAAxC,EAAsDC,UAAtD;AAAA,SAC5BzC,EAAE,CAACK,GAAH,oBAAmBK,GAAnB,GAA0BJ,GAA1B,CAA8B;AAC1B8B,IAAAA,IAAI,EAAJA,IAD0B;AAE1BC,IAAAA,IAAI,EAAJA,IAF0B;AAG1BC,IAAAA,QAAQ,EAARA,QAH0B;AAI1BC,IAAAA,UAAU,EAAVA,UAJ0B;AAK1BC,IAAAA,YAAY,EAAZA,YAL0B;AAM1BC,IAAAA,UAAU,EAAVA;AAN0B,GAA9B,CAD4B;AAAA,CAAhC,C,CAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACIxC,YADJ,EAEIM,YAFJ,EAGIE,eAHJ,EAIIQ,oBAJJ,EAKIS,eALJ,EAMIC,YANJ,EAOIC,YAPJ,EAQIM,iBARJ,EASIC,uBATJ,EAUIhB,oBAVJ,EAWIM,cAXJ","sourcesContent":["import { db } from \"./firebase\";\r\n\r\n// the user is created as an object with the username and email properties.Furthermore,\r\n// it is stored on the users / ${ id } resource path.\r\n// So whenever you would want to retrieve a specific user from the Firebase database,\r\n// you could get the one user via its unique identifier and the entity resource path.\r\nconst doCreateUser = (id, username, email) =>\r\n    db.ref(`users/${id}`).set({\r\n        username,\r\n        email\r\n    });\r\n\r\n// users are retrieved from the general userâ€™s entity resource path.\r\n// The function will return all users from the Firebase realtime database.\r\nconst onceGetUsers = () => db.ref(\"users\").once(\"value\");\r\n\r\nconst doCreateExpense = (uid, date, expense, category, comments, day) => {\r\n    db.ref(`expenseTable/${uid}`)\r\n        .push()\r\n        .set({ uid, date, expense, category, comments, day });\r\n};\r\n\r\n// Create an expense table , this happens for first time\r\nconst doCreateExpenseTable = (uid, date, expense, category, comments, day, key) => {\r\n    db.ref(`expenseTable/${uid}/${key}`).set({\r\n        uid,\r\n        date,\r\n        expense,\r\n        category,\r\n        comments,\r\n        day\r\n    });\r\n};\r\n\r\n// Create an saving table , this happens for first time\r\nconst doCreateSavingsTable = (\r\n    uid,\r\n    date,\r\n    goalAmount,\r\n    savingAmount,\r\n    savingFor,\r\n    comments,\r\n    day,\r\n    goalAchieved,\r\n    cardColor,\r\n    key\r\n) => {\r\n    db.ref(`savingsTable/${uid}/${key}`).set({\r\n        uid,\r\n        date,\r\n        goalAmount,\r\n        savingAmount,\r\n        savingFor,\r\n        comments,\r\n        goalAchieved,\r\n        cardColor,\r\n        day\r\n    });\r\n};\r\n\r\nconst doCreateSaving = (uid, date, goalAmount, savingAmount, savingFor, comments, goalAchieved, cardColor, day) => {\r\n    db.ref(`savingsTable/${uid}`)\r\n        .push()\r\n        .set({ uid, date, goalAmount, savingAmount, savingFor, comments, goalAchieved, cardColor, day });\r\n};\r\n\r\nconst onceGetExpenses = () => db.ref(\"expenses\").once(\"value\");\r\n\r\nconst onceGetLoans = () => db.ref(\"loans\").once(\"value\");\r\n\r\nconst doCreateLoan = (uid, date, amount, loanType, reason, person, day, status) => {\r\n    db.ref(`loanTable/${uid}`)\r\n        .push()\r\n        .set({\r\n            uid,\r\n            date,\r\n            amount,\r\n            loanType,\r\n            reason,\r\n            person,\r\n            day,\r\n            status\r\n        });\r\n};\r\n\r\nconst doCreateLoanTable = (uid, date, amount, loanType, reason, person, day, status, key) => {\r\n    db.ref(`loanTable/${uid}/${key}`).set({ uid, date, amount, loanType, reason, person, day, status });\r\n};\r\n\r\nconst doCreateSettingsForUser = (uid, font, mode, currency, travelMode, fromCurrency, monthLimit) =>\r\n    db.ref(`settings/${uid}`).set({\r\n        font,\r\n        mode,\r\n        currency,\r\n        travelMode,\r\n        fromCurrency,\r\n        monthLimit\r\n    });\r\n\r\n//  const expensesRef = db.ref('expenses')\r\n//     expensesRef.on('child_removed', function (data) {\r\n//         console.log(\"child_removed\")\r\n//     });\r\n\r\n// const allExpenses = () => {\r\n//     return onceGetExpenses().then((data) => {\r\n//          console.log(data.val())\r\n//         }).catch(error => {\r\n//             console.log(error)\r\n//         });\r\n// }\r\n\r\nexport {\r\n    doCreateUser,\r\n    onceGetUsers,\r\n    doCreateExpense,\r\n    doCreateExpenseTable,\r\n    onceGetExpenses,\r\n    onceGetLoans,\r\n    doCreateLoan,\r\n    doCreateLoanTable,\r\n    doCreateSettingsForUser,\r\n    doCreateSavingsTable,\r\n    doCreateSaving\r\n};\r\n"]},"metadata":{},"sourceType":"module"}