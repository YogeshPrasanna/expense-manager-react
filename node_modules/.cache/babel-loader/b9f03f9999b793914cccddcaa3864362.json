{"ast":null,"code":"var _jsxFileName = \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\src\\\\components\\\\MonthView\\\\TotalCard.js\";\nimport React from \"react\";\nimport Loader from \"../Common/Loader\";\nimport * as utils from \"../Util\";\n\nvar TotalCard = function TotalCard(props) {\n  var pad0 = {\n    padding: \"0\"\n  };\n  var cardStyleDesktop = {\n    \"color\": \"white\",\n    \"mixBlendMode\": \"difference\"\n  };\n  var cardStyleMobile = {\n    \"color\": \"#2C3034\"\n  };\n  var expenses = props.expenses;\n  var currentUser = props.authUser;\n  var selectedMonth = props.month;\n  var selectedYear = props.year;\n  var settings = props.settings;\n  var cards = props.cards;\n  var totalExpenses = 0;\n\n  if (!expenses || !currentUser || !selectedMonth || !selectedYear || !settings) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n  if (expenses && currentUser && selectedMonth && selectedYear && cards) {\n    var eachExpense = utils.eachExpense(expenses);\n    var usersExpensesInSelectedMonthAndYear = utils.expensesinMonthAndYear(eachExpense, currentUser, selectedMonth, selectedYear); // Overall Expenses\n\n    if (usersExpensesInSelectedMonthAndYear.length > 1) {\n      totalExpenses = utils.totalExpense(usersExpensesInSelectedMonthAndYear);\n    } else if (usersExpensesInSelectedMonthAndYear.length === 1) {\n      totalExpenses = usersExpensesInSelectedMonthAndYear[0].value.expense;\n    } else {\n      totalExpenses = 0;\n    }\n  }\n\n  if (settings) {\n    return React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: pad0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card1 mobileNoPadding\",\n      style: cards.card1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: window.screen.width > 720 ? cardStyleDesktop : cardStyleMobile,\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Total Money Spent \", React.createElement(\"i\", {\n      className: \"fa fa-money float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      style: window.screen.width > 720 ? cardStyleDesktop : cardStyleMobile,\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa \".concat(utils.setCurrencyIcon(settings.currency)),\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \" \", totalExpenses.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\")))));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      style: pad0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card1 mobileNoPadding\",\n      style: cards.card1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Total Money Spent \", React.createElement(\"i\", {\n      className: \"fa fa-money float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))));\n  }\n};\n\nexport default TotalCard;","map":{"version":3,"sources":["G:\\Workspace\\2018\\expense-manager-react\\src\\components\\MonthView\\TotalCard.js"],"names":["React","Loader","utils","TotalCard","props","pad0","padding","cardStyleDesktop","cardStyleMobile","expenses","currentUser","authUser","selectedMonth","month","selectedYear","year","settings","cards","totalExpenses","eachExpense","usersExpensesInSelectedMonthAndYear","expensesinMonthAndYear","length","totalExpense","value","expense","card1","window","screen","width","setCurrencyIcon","currency","toString","replace"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Loader from \"../Common/Loader\";\r\nimport * as utils from \"../Util\";\r\n\r\nconst TotalCard = props => {\r\n    const pad0 = {\r\n        padding: \"0\"\r\n    };\r\n\r\n    const cardStyleDesktop = {\r\n        \"color\": \"white\",\r\n        \"mixBlendMode\": \"difference\"\r\n    }\r\n\r\n    const cardStyleMobile = {\r\n        \"color\": \"#2C3034\",\r\n    }\r\n\r\n    let expenses = props.expenses;\r\n    let currentUser = props.authUser;\r\n    let selectedMonth = props.month;\r\n    let selectedYear = props.year;\r\n    let settings = props.settings;\r\n    let cards = props.cards;\r\n\r\n    let totalExpenses = 0;\r\n\r\n    if (!expenses || !currentUser || !selectedMonth || !selectedYear || !settings) {\r\n        return (\r\n            <div>\r\n                <Loader />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (expenses && currentUser && selectedMonth && selectedYear && cards) {\r\n        let eachExpense = utils.eachExpense(expenses);\r\n        let usersExpensesInSelectedMonthAndYear = utils.expensesinMonthAndYear(\r\n            eachExpense,\r\n            currentUser,\r\n            selectedMonth,\r\n            selectedYear\r\n        );\r\n\r\n        // Overall Expenses\r\n        if (usersExpensesInSelectedMonthAndYear.length > 1) {\r\n            totalExpenses = utils.totalExpense(usersExpensesInSelectedMonthAndYear);\r\n        } else if (usersExpensesInSelectedMonthAndYear.length === 1) {\r\n            totalExpenses = usersExpensesInSelectedMonthAndYear[0].value.expense;\r\n        } else {\r\n            totalExpenses = 0;\r\n        }\r\n    }\r\n\r\n    if (settings) {\r\n        return (\r\n            <div className=\"col-sm-12\" style={pad0}>\r\n                <div className=\"card card1 mobileNoPadding\" style={cards.card1}>\r\n                    <div className=\"card-block\">\r\n                        <h3 style={window.screen.width > 720 ? cardStyleDesktop : cardStyleMobile} className=\"card-title\">\r\n                            Total Money Spent <i className=\"fa fa-money float-right\" />\r\n                        </h3>\r\n                        <p style={window.screen.width > 720 ? cardStyleDesktop : cardStyleMobile} className=\"card-text\">\r\n                            <i className={`fa ${utils.setCurrencyIcon(settings.currency)}`} aria-hidden=\"true\" />{\" \"}\r\n                            {totalExpenses.toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\")}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"col-sm-12\" style={pad0}>\r\n                <div className=\"card card1 mobileNoPadding\" style={cards.card1}>\r\n                    <div className=\"card-block\">\r\n                        <h3 className=\"card-title\">\r\n                            Total Money Spent <i className=\"fa fa-money float-right\" />\r\n                        </h3>\r\n                        <Loader />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TotalCard;\r\n"]},"metadata":{},"sourceType":"module"}