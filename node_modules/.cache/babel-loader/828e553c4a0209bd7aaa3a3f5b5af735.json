{"ast":null,"code":"import _classCallCheck from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\src\\\\components\\\\FilterView\\\\index.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport ExpenseTable from \"./ExpenseTable.js\";\nimport TotalCard from \"./TotalCard.js\";\nimport moment from \"moment\";\nimport GenerateExcel from \"./GenerateExcel\";\nimport Loader from \"./../Common/Loader\";\nimport * as analytics from \"./../../analytics/analytics\";\nimport MobileExpenseTable from \"./MobileExpenseTable\";\n\nvar FilterViewPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FilterViewPage, _Component);\n\n  function FilterViewPage(props) {\n    var _this;\n\n    _classCallCheck(this, FilterViewPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterViewPage).call(this, props)); // current year's first day\n\n    var thisYear = new Date().getFullYear();\n    var start = new Date(\"1/1/\" + thisYear);\n    var defaultStart = moment(start.valueOf());\n\n    function parseURLParams(url) {\n      var queryStart = url.indexOf(\"?\") + 1,\n          queryEnd = url.indexOf(\"#\") + 1 || url.length + 1,\n          query = url.slice(queryStart, queryEnd - 1),\n          pairs = query.replace(/\\+/g, \" \").split(\"&\"),\n          parms = {},\n          i,\n          n,\n          v,\n          nv;\n      if (query === url || query === \"\") return;\n\n      for (i = 0; i < pairs.length; i++) {\n        nv = pairs[i].split(\"=\", 2);\n        n = decodeURIComponent(nv[0]);\n        v = decodeURIComponent(nv[1]);\n        if (!parms.hasOwnProperty(n)) parms[n] = [];\n        parms[n].push(nv.length === 2 ? v : null);\n      }\n\n      return parms;\n    }\n\n    var urlString = window.location.href;\n    var urlParams = parseURLParams(urlString);\n\n    if (urlParams) {\n      if (urlParams.from[0] === \"monthpage\") {\n        var selectedMonth = Number(urlParams.selectedMonth[0]) + 1;\n        var selectedYear = Number(urlParams.selectedYear[0]);\n        var urlCategory = urlParams.category[0]; //const noOfDaysInMonth = moment(`${selectedMonth}-${selectedYear}`, \"YYYY-MM\").daysInMonth();\n\n        var noOfDaysInMonth = moment(\"\".concat(selectedYear, \"-\").concat(selectedMonth), \"YYYY-MM\").daysInMonth();\n        var startDate = moment(\"\".concat(selectedMonth, \"/01/\").concat(selectedYear));\n        var endDate = moment(\"\".concat(selectedMonth, \"/\").concat(noOfDaysInMonth, \"/\").concat(selectedYear));\n        _this.state = {\n          fromdate: startDate,\n          todate: endDate,\n          category: urlCategory,\n          expensefrom: \"00\",\n          expenseto: \"10000\",\n          convertedCurrency: null\n        };\n      } else if (urlParams.from[0] === \"yearpage\") {\n        var _selectedYear = urlParams.selectedYear[0] === \"all\" ? moment(new Date()).get(\"year\") : Number(urlParams.selectedYear[0]);\n\n        var _urlCategory = urlParams.category[0]; //const noOfDaysInMonth = moment(`${selectedMonth}-${selectedYear}`, \"YYYY-MM\").daysInMonth();\n\n        var _noOfDaysInMonth = moment(\"\".concat(_selectedYear, \"-12\"), \"YYYY-MM\").daysInMonth();\n\n        var _startDate = moment(\"01/01/\".concat(_selectedYear));\n\n        var _endDate = moment(\"12/\".concat(_noOfDaysInMonth, \"/\").concat(_selectedYear));\n\n        _this.state = {\n          fromdate: _startDate,\n          todate: _endDate,\n          category: _urlCategory,\n          expensefrom: \"00\",\n          expenseto: \"10000\",\n          convertedCurrency: null\n        };\n      }\n    } else {\n      _this.state = {\n        fromdate: defaultStart,\n        todate: moment(),\n        category: \"Food\",\n        expensefrom: \"00\",\n        expenseto: \"10000\",\n        convertedCurrency: null\n      };\n    }\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFromDateSelect = _this.handleFromDateSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleToDateSelect = _this.handleToDateSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FilterViewPage, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      // If you are using babel, you can use ES 6 dictionary syntax { [e.target.name] = e.target.value }\n      var change = {};\n      change[e.target.name] = e.target.value.length === 1 ? \"00\" : e.target.value;\n      this.setState(change);\n    }\n  }, {\n    key: \"handleFromDateSelect\",\n    value: function handleFromDateSelect(fromdate) {\n      this.setState({\n        fromdate: fromdate\n      });\n    }\n  }, {\n    key: \"handleToDateSelect\",\n    value: function handleToDateSelect(todate) {\n      this.setState({\n        todate: todate\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      analytics.initGA();\n      analytics.logPageView(); // if travel mode then convert currency else set to 1\n\n      if (this.props.settings && this.props.settings.travelMode === \"on\") {\n        var returnCur = function returnCur(cur) {\n          switch (cur) {\n            case \"Indian Rupees\":\n              return \"INR\";\n\n            case \"US Dollars\":\n              return \"USD\";\n\n            case \"Pounds\":\n              return \"EUR\";\n\n            case \"Euro\":\n              return \"EUR\";\n\n            case \"Yen\":\n              return \"YER\";\n\n            default:\n              return \"INR\";\n          }\n        };\n\n        var fromcur = returnCur(this.props.settings.fromCurrency);\n        var tocur = returnCur(this.props.settings.currency);\n        fetch(\"https://free.currencyconverterapi.com/api/v5/convert?q=\".concat(fromcur, \"_\").concat(tocur, \"&compact=y\")).then(function (resp) {\n          return resp.json();\n        }) // Transform the data into json\n        .then(function (data) {\n          _this2.setState({\n            convertedCurrency: Object.values(data)[0].val\n          });\n        }).catch(function () {\n          alert(\"Some Problem with the currency converter api. Values will Fallback to default currency\");\n\n          _this2.setState({\n            convertedCurrency: 1\n          });\n        });\n      } else {\n        this.setState({\n          convertedCurrency: 1\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var datePickerHeader = {\n        background: \"#887657\",\n        color: \"#fff\",\n        padding: \"15px\",\n        margin: \"0 0 15px 0\",\n        borderRadius: \"5px\"\n      };\n      var form = {\n        padding: window.screen.width > 720 ? \"15px 0 0 0\" : \"15px\"\n      };\n      var pad0 = {\n        padding: \"0px\"\n      };\n      var styleFromSettings = {\n        fontFamily: this.props.settings ? this.props.settings.font : \"sans-serif\",\n        backgroundColor: this.props.settings ? this.props.settings.mode === \"night\" ? \"#484842\" : \"auto\" : \"auto\",\n        minHeight: \"91vh\"\n      };\n      var white = {\n        color: this.props.settings ? this.props.settings.mode === \"night\" ? \"#fff\" : \"#000\" : \"#000\"\n      };\n      var rightCol = {\n        paddingLeft: \"0\"\n      };\n      var inputNightMode = {\n        background: \"#2c2b2b\",\n        color: \"#a9a0a0\",\n        border: \"1px solid #9b8c8cc7\"\n      };\n      var inputDayMode = {\n        background: \"#fff\",\n        color: \"#495057\"\n      };\n\n      if (this.props.settings && this.props.cards) {\n        return React.createElement(\"div\", {\n          className: \"container-fluid\",\n          style: styleFromSettings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-sm-4 mobileNoPadding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          style: form,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          style: pad0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-12 col-form-label\",\n          style: white,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"From Date\")), React.createElement(\"div\", {\n          className: \"col-sm-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(DatePicker, {\n          className: \"form-control date \" + (this.props.settings.mode === \"night\" ? \"inputNightMode\" : \"inputDayMode\"),\n          name: \"fromdate\",\n          selected: this.state.fromdate,\n          onSelect: this.handleFromDateSelect.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          style: pad0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-12 col-form-label\",\n          style: white,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, \"To Date\")), React.createElement(\"div\", {\n          className: \"col-sm-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(DatePicker, {\n          className: \"form-control date \" + (this.props.settings.mode === \"night\" ? \"inputNightMode\" : \"inputDayMode\"),\n          name: \"todate\",\n          selected: this.state.todate,\n          onSelect: this.handleToDateSelect.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          style: pad0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-12 col-xs-6 col-form-label\",\n          style: white,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, \"From Expense\")), React.createElement(\"div\", {\n          className: \"col-sm-12 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          required: true,\n          type: \"number\",\n          name: \"expensefrom\",\n          onChange: this.handleChange.bind(this),\n          value: this.state.expensefrom,\n          style: this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          style: pad0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-12 col-xs-6 col-form-label\",\n          style: white,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, \"To Expense\")), React.createElement(\"div\", {\n          className: \"col-sm-12 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          required: true,\n          type: \"number\",\n          name: \"expenseto\",\n          onChange: this.handleChange.bind(this),\n          value: this.state.expenseto,\n          style: this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-12 col-xs-6 col-form-label\",\n          style: white,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, \"category\")), React.createElement(\"div\", {\n          className: \"col-sm-12 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"form-control\",\n          name: \"category\",\n          value: this.state.category,\n          onChange: this.handleChange.bind(this),\n          style: this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"Food\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, \"Food\"), React.createElement(\"option\", {\n          value: \"Automobile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, \"Automobile\"), React.createElement(\"option\", {\n          value: \"Entertainment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \"Entertainment\"), React.createElement(\"option\", {\n          value: \"Clothing\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, \"Clothing\"), React.createElement(\"option\", {\n          value: \"Healthcare\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, \"Healthcare\"), React.createElement(\"option\", {\n          value: \"Travel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \"Travel\"), React.createElement(\"option\", {\n          value: \"Shopping\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \"Shopping\"), React.createElement(\"option\", {\n          value: \"Personal Care\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, \"Personal Care\"), React.createElement(\"option\", {\n          value: \"Investment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, \"Investment\"), React.createElement(\"option\", {\n          value: \"Gifts & Donations\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, \"Gifts & Donations\"), React.createElement(\"option\", {\n          value: \"Bills & Utilities\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, \"Bills & Utilities\"), React.createElement(\"option\", {\n          value: \"Others\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, \"Others\"))))), React.createElement(TotalCard, {\n          expenses: this.props.expenses,\n          expensefrom: this.state.expensefrom,\n          expenseto: this.state.expenseto,\n          fromdate: this.state.fromdate.format(\"MM/DD/YYYY\"),\n          todate: this.state.todate.format(\"MM/DD/YYYY\"),\n          category: this.state.category,\n          authUser: this.props.user,\n          settings: this.props.settings,\n          cards: this.props.cards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-sm-8 mobileNoPadding\",\n          style: rightCol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(GenerateExcel, {\n          expenses: this.props.expenses,\n          expensefrom: this.state.expensefrom,\n          expenseto: this.state.expenseto,\n          fromdate: this.state.fromdate.format(\"MM/DD/YYYY\"),\n          todate: this.state.todate.format(\"MM/DD/YYYY\"),\n          category: this.state.category,\n          authUser: this.props.user,\n          settings: this.props.settings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }), this.state.convertedCurrency ? window.screen.width > 720 ? React.createElement(ExpenseTable, {\n          expenses: this.props.expenses,\n          expensefrom: this.state.expensefrom,\n          expenseto: this.state.expenseto,\n          fromdate: this.state.fromdate.format(\"MM/DD/YYYY\"),\n          todate: this.state.todate.format(\"MM/DD/YYYY\"),\n          category: this.state.category,\n          authUser: this.props.user,\n          settings: this.props.settings,\n          convertedCurrency: this.state.convertedCurrency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }) : React.createElement(MobileExpenseTable, {\n          expenses: this.props.expenses,\n          expensefrom: this.state.expensefrom,\n          expenseto: this.state.expenseto,\n          fromdate: this.state.fromdate.format(\"MM/DD/YYYY\"),\n          todate: this.state.todate.format(\"MM/DD/YYYY\"),\n          category: this.state.category,\n          authUser: this.props.user,\n          settings: this.props.settings,\n          convertedCurrency: this.state.convertedCurrency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }) : React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return FilterViewPage;\n}(Component);\n\nexport default FilterViewPage;","map":{"version":3,"sources":["G:\\Workspace\\2018\\expense-manager-react\\src\\components\\FilterView\\index.js"],"names":["React","Component","DatePicker","ExpenseTable","TotalCard","moment","GenerateExcel","Loader","analytics","MobileExpenseTable","FilterViewPage","props","thisYear","Date","getFullYear","start","defaultStart","valueOf","parseURLParams","url","queryStart","indexOf","queryEnd","length","query","slice","pairs","replace","split","parms","i","n","v","nv","decodeURIComponent","hasOwnProperty","push","urlString","window","location","href","urlParams","from","selectedMonth","Number","selectedYear","urlCategory","category","noOfDaysInMonth","daysInMonth","startDate","endDate","state","fromdate","todate","expensefrom","expenseto","convertedCurrency","get","handleChange","bind","handleFromDateSelect","handleToDateSelect","e","change","target","name","value","setState","initGA","logPageView","settings","travelMode","returnCur","cur","fromcur","fromCurrency","tocur","currency","fetch","then","resp","json","data","Object","values","val","catch","alert","datePickerHeader","background","color","padding","margin","borderRadius","form","screen","width","pad0","styleFromSettings","fontFamily","font","backgroundColor","mode","minHeight","white","rightCol","paddingLeft","inputNightMode","border","inputDayMode","cards","handleSubmit","expenses","format","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport ExpenseTable from \"./ExpenseTable.js\";\r\nimport TotalCard from \"./TotalCard.js\";\r\nimport moment from \"moment\";\r\nimport GenerateExcel from \"./GenerateExcel\";\r\nimport Loader from \"./../Common/Loader\";\r\n\r\nimport * as analytics from \"./../../analytics/analytics\";\r\nimport MobileExpenseTable from \"./MobileExpenseTable\";\r\n\r\nclass FilterViewPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // current year's first day\r\n        const thisYear = new Date().getFullYear();\r\n        const start = new Date(\"1/1/\" + thisYear);\r\n        const defaultStart = moment(start.valueOf());\r\n\r\n        function parseURLParams(url) {\r\n            var queryStart = url.indexOf(\"?\") + 1,\r\n                queryEnd = url.indexOf(\"#\") + 1 || url.length + 1,\r\n                query = url.slice(queryStart, queryEnd - 1),\r\n                pairs = query.replace(/\\+/g, \" \").split(\"&\"),\r\n                parms = {},\r\n                i,\r\n                n,\r\n                v,\r\n                nv;\r\n\r\n            if (query === url || query === \"\") return;\r\n\r\n            for (i = 0; i < pairs.length; i++) {\r\n                nv = pairs[i].split(\"=\", 2);\r\n                n = decodeURIComponent(nv[0]);\r\n                v = decodeURIComponent(nv[1]);\r\n\r\n                if (!parms.hasOwnProperty(n)) parms[n] = [];\r\n                parms[n].push(nv.length === 2 ? v : null);\r\n            }\r\n            return parms;\r\n        }\r\n\r\n        var urlString = window.location.href;\r\n        var urlParams = parseURLParams(urlString);\r\n\r\n        if (urlParams) {\r\n            if (urlParams.from[0] === \"monthpage\") {\r\n                const selectedMonth = Number(urlParams.selectedMonth[0]) + 1;\r\n                const selectedYear = Number(urlParams.selectedYear[0]);\r\n                const urlCategory = urlParams.category[0];\r\n                //const noOfDaysInMonth = moment(`${selectedMonth}-${selectedYear}`, \"YYYY-MM\").daysInMonth();\r\n                const noOfDaysInMonth = moment(`${selectedYear}-${selectedMonth}`, \"YYYY-MM\").daysInMonth();\r\n\r\n                const startDate = moment(`${selectedMonth}/01/${selectedYear}`);\r\n                const endDate = moment(`${selectedMonth}/${noOfDaysInMonth}/${selectedYear}`);\r\n\r\n                this.state = {\r\n                    fromdate: startDate,\r\n                    todate: endDate,\r\n                    category: urlCategory,\r\n                    expensefrom: \"00\",\r\n                    expenseto: \"10000\",\r\n                    convertedCurrency: null\r\n                };\r\n            } else if (urlParams.from[0] === \"yearpage\") {\r\n                const selectedYear =\r\n                    urlParams.selectedYear[0] === \"all\"\r\n                        ? moment(new Date()).get(\"year\")\r\n                        : Number(urlParams.selectedYear[0]);\r\n                const urlCategory = urlParams.category[0];\r\n                //const noOfDaysInMonth = moment(`${selectedMonth}-${selectedYear}`, \"YYYY-MM\").daysInMonth();\r\n                const noOfDaysInMonth = moment(`${selectedYear}-12`, \"YYYY-MM\").daysInMonth();\r\n\r\n                const startDate = moment(`01/01/${selectedYear}`);\r\n                const endDate = moment(`12/${noOfDaysInMonth}/${selectedYear}`);\r\n\r\n                this.state = {\r\n                    fromdate: startDate,\r\n                    todate: endDate,\r\n                    category: urlCategory,\r\n                    expensefrom: \"00\",\r\n                    expenseto: \"10000\",\r\n                    convertedCurrency: null\r\n                };\r\n            }\r\n        } else {\r\n            this.state = {\r\n                fromdate: defaultStart,\r\n                todate: moment(),\r\n                category: \"Food\",\r\n                expensefrom: \"00\",\r\n                expenseto: \"10000\",\r\n                convertedCurrency: null\r\n            };\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFromDateSelect = this.handleFromDateSelect.bind(this);\r\n        this.handleToDateSelect = this.handleToDateSelect.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        // If you are using babel, you can use ES 6 dictionary syntax { [e.target.name] = e.target.value }\r\n        var change = {};\r\n        change[e.target.name] = e.target.value.length === 1 ? \"00\" : e.target.value;\r\n        this.setState(change);\r\n    }\r\n\r\n    handleFromDateSelect(fromdate) {\r\n        this.setState({\r\n            fromdate: fromdate\r\n        });\r\n    }\r\n\r\n    handleToDateSelect(todate) {\r\n        this.setState({\r\n            todate: todate\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        analytics.initGA();\r\n        analytics.logPageView();\r\n\r\n        // if travel mode then convert currency else set to 1\r\n        if (this.props.settings && this.props.settings.travelMode === \"on\") {\r\n            function returnCur(cur) {\r\n                switch (cur) {\r\n                    case \"Indian Rupees\":\r\n                        return \"INR\";\r\n                    case \"US Dollars\":\r\n                        return \"USD\";\r\n                    case \"Pounds\":\r\n                        return \"EUR\";\r\n                    case \"Euro\":\r\n                        return \"EUR\";\r\n                    case \"Yen\":\r\n                        return \"YER\";\r\n                    default:\r\n                        return \"INR\";\r\n                }\r\n            }\r\n\r\n            const fromcur = returnCur(this.props.settings.fromCurrency);\r\n            const tocur = returnCur(this.props.settings.currency);\r\n\r\n            fetch(`https://free.currencyconverterapi.com/api/v5/convert?q=${fromcur}_${tocur}&compact=y`)\r\n                .then(resp => resp.json()) // Transform the data into json\r\n                .then(data => {\r\n                    this.setState({\r\n                        convertedCurrency: Object.values(data)[0].val\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    alert(\"Some Problem with the currency converter api. Values will Fallback to default currency\");\r\n                    this.setState({ convertedCurrency: 1 });\r\n                });\r\n        } else {\r\n            this.setState({ convertedCurrency: 1 });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const datePickerHeader = {\r\n            background: \"#887657\",\r\n            color: \"#fff\",\r\n            padding: \"15px\",\r\n            margin: \"0 0 15px 0\",\r\n            borderRadius: \"5px\"\r\n        };\r\n\r\n        const form = {\r\n            padding: window.screen.width > 720 ? \"15px 0 0 0\" : \"15px\"\r\n        };\r\n\r\n        const pad0 = {\r\n            padding: \"0px\"\r\n        };\r\n\r\n        const styleFromSettings = {\r\n            fontFamily: this.props.settings ? this.props.settings.font : \"sans-serif\",\r\n            backgroundColor: this.props.settings ? (this.props.settings.mode === \"night\" ? \"#484842\" : \"auto\") : \"auto\",\r\n            minHeight: \"91vh\"\r\n        };\r\n\r\n        const white = {\r\n            color: this.props.settings ? (this.props.settings.mode === \"night\" ? \"#fff\" : \"#000\") : \"#000\"\r\n        };\r\n\r\n        const rightCol = {\r\n            paddingLeft: \"0\"\r\n        };\r\n\r\n        const inputNightMode = {\r\n            background: \"#2c2b2b\",\r\n            color: \"#a9a0a0\",\r\n            border: \"1px solid #9b8c8cc7\"\r\n        };\r\n\r\n        const inputDayMode = { background: \"#fff\", color: \"#495057\" };\r\n\r\n        if (this.props.settings && this.props.cards) {\r\n            return (\r\n                <div className=\"container-fluid\" style={styleFromSettings}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-4 mobileNoPadding\">\r\n                            <form onSubmit={this.handleSubmit} style={form}>\r\n                                {/* <div style={datePickerHeader}> Filter out your expenses </div> */}\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-6\" style={pad0}>\r\n                                        <label className=\"col-sm-12 col-form-label\" style={white}>\r\n                                            <span>From Date</span>\r\n                                        </label>\r\n                                        <div className=\"col-sm-12\">\r\n                                            <DatePicker\r\n                                                className={\r\n                                                    \"form-control date \" +\r\n                                                    (this.props.settings.mode === \"night\"\r\n                                                        ? \"inputNightMode\"\r\n                                                        : \"inputDayMode\")\r\n                                                }\r\n                                                name=\"fromdate\"\r\n                                                selected={this.state.fromdate}\r\n                                                onSelect={this.handleFromDateSelect.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\" style={pad0}>\r\n                                        <label className=\"col-sm-12 col-form-label\" style={white}>\r\n                                            <span>To Date</span>\r\n                                        </label>\r\n                                        <div className=\"col-sm-12\">\r\n                                            <DatePicker\r\n                                                className={\r\n                                                    \"form-control date \" +\r\n                                                    (this.props.settings.mode === \"night\"\r\n                                                        ? \"inputNightMode\"\r\n                                                        : \"inputDayMode\")\r\n                                                }\r\n                                                name=\"todate\"\r\n                                                selected={this.state.todate}\r\n                                                onSelect={this.handleToDateSelect.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-6\" style={pad0}>\r\n                                        <label className=\"col-sm-12 col-xs-6 col-form-label\" style={white}>\r\n                                            <span>From Expense</span>\r\n                                        </label>\r\n                                        <div className=\"col-sm-12 col-xs-6\">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                required\r\n                                                type=\"number\"\r\n                                                name=\"expensefrom\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                value={this.state.expensefrom}\r\n                                                style={\r\n                                                    this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\" style={pad0}>\r\n                                        <label className=\"col-sm-12 col-xs-6 col-form-label\" style={white}>\r\n                                            <span>To Expense</span>\r\n                                        </label>\r\n                                        <div className=\"col-sm-12 col-xs-6\">\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                required\r\n                                                type=\"number\"\r\n                                                name=\"expenseto\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                value={this.state.expenseto}\r\n                                                style={\r\n                                                    this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group row\">\r\n                                    <label className=\"col-sm-12 col-xs-6 col-form-label\" style={white}>\r\n                                        <span>category</span>\r\n                                    </label>\r\n                                    <div className=\"col-sm-12 col-xs-6\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"category\"\r\n                                            value={this.state.category}\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            style={this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode}\r\n                                        >\r\n                                            <option value=\"Food\">Food</option>\r\n                                            <option value=\"Automobile\">Automobile</option>\r\n                                            <option value=\"Entertainment\">Entertainment</option>\r\n                                            <option value=\"Clothing\">Clothing</option>\r\n                                            <option value=\"Healthcare\">Healthcare</option>\r\n                                            <option value=\"Travel\">Travel</option>\r\n                                            <option value=\"Shopping\">Shopping</option>\r\n                                            <option value=\"Personal Care\">Personal Care</option>\r\n                                            <option value=\"Investment\">Investment</option>\r\n                                            <option value=\"Gifts & Donations\">Gifts & Donations</option>\r\n                                            <option value=\"Bills & Utilities\">Bills & Utilities</option>\r\n                                            <option value=\"Others\">Others</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <TotalCard\r\n                                expenses={this.props.expenses}\r\n                                expensefrom={this.state.expensefrom}\r\n                                expenseto={this.state.expenseto}\r\n                                fromdate={this.state.fromdate.format(\"MM/DD/YYYY\")}\r\n                                todate={this.state.todate.format(\"MM/DD/YYYY\")}\r\n                                category={this.state.category}\r\n                                authUser={this.props.user}\r\n                                settings={this.props.settings}\r\n                                cards={this.props.cards}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-8 mobileNoPadding\" style={rightCol}>\r\n                            <GenerateExcel\r\n                                expenses={this.props.expenses}\r\n                                expensefrom={this.state.expensefrom}\r\n                                expenseto={this.state.expenseto}\r\n                                fromdate={this.state.fromdate.format(\"MM/DD/YYYY\")}\r\n                                todate={this.state.todate.format(\"MM/DD/YYYY\")}\r\n                                category={this.state.category}\r\n                                authUser={this.props.user}\r\n                                settings={this.props.settings}\r\n                            />\r\n                            {this.state.convertedCurrency ? (\r\n                                window.screen.width > 720 ? (\r\n                                    <ExpenseTable\r\n                                        expenses={this.props.expenses}\r\n                                        expensefrom={this.state.expensefrom}\r\n                                        expenseto={this.state.expenseto}\r\n                                        fromdate={this.state.fromdate.format(\"MM/DD/YYYY\")}\r\n                                        todate={this.state.todate.format(\"MM/DD/YYYY\")}\r\n                                        category={this.state.category}\r\n                                        authUser={this.props.user}\r\n                                        settings={this.props.settings}\r\n                                        convertedCurrency={this.state.convertedCurrency}\r\n                                    />\r\n                                ) : (\r\n                                        <MobileExpenseTable\r\n                                            expenses={this.props.expenses}\r\n                                            expensefrom={this.state.expensefrom}\r\n                                            expenseto={this.state.expenseto}\r\n                                            fromdate={this.state.fromdate.format(\"MM/DD/YYYY\")}\r\n                                            todate={this.state.todate.format(\"MM/DD/YYYY\")}\r\n                                            category={this.state.category}\r\n                                            authUser={this.props.user}\r\n                                            settings={this.props.settings}\r\n                                            convertedCurrency={this.state.convertedCurrency}\r\n                                        />\r\n                                    )\r\n                            ) : (\r\n                                    <Loader />\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default FilterViewPage;\r\n"]},"metadata":{},"sourceType":"module"}