{"ast":null,"code":"import _classCallCheck from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\Workspace\\\\2018\\\\expense-manager-react\\\\src\\\\components\\\\Home\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ExpenseTable from \"./ExpenseTable.js\";\nimport AddExpensePopup from \"./AddExpensePopup\";\nimport Cards from \"./Cards\";\nimport GenerateExcel from \"./GenerateExcel\";\nimport Loader from \"./../Common/Loader\";\nimport MobileExpenseTable from \"./MobileExpenseTable\";\nimport * as analytics from \"./../../analytics/analytics\";\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.state = {\n      showPopup: false,\n      convertedCurrency: null\n    };\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      analytics.initGA();\n      analytics.logPageView(); // if travel mode then convert currency else set to 1\n\n      if (this.props.settings && this.props.settings.travelMode === \"on\") {\n        var returnCur = function returnCur(cur) {\n          switch (cur) {\n            case \"Indian Rupees\":\n              return \"INR\";\n\n            case \"US Dollars\":\n              return \"USD\";\n\n            case \"Pounds\":\n              return \"EUR\";\n\n            case \"Euro\":\n              return \"EUR\";\n\n            case \"Yen\":\n              return \"YER\";\n\n            default:\n              return \"INR\";\n          }\n        };\n\n        var fromcur = returnCur(this.props.settings.fromCurrency);\n        var tocur = returnCur(this.props.settings.currency);\n        fetch(\"https://free.currencyconverterapi.com/api/v5/convert?q=\".concat(fromcur, \"_\").concat(tocur, \"&compact=y\")).then(function (resp) {\n          return resp.json();\n        }) // Transform the data into json\n        .then(function (data) {\n          _this2.setState({\n            convertedCurrency: Object.values(data)[0].val\n          });\n        }).catch(function () {\n          alert(\"Some Problem with the currency converter api. Values will Fallback to default currency\");\n\n          _this2.setState({\n            convertedCurrency: 1\n          });\n        });\n      } else {\n        this.setState({\n          convertedCurrency: 1\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styleFromSettings = {\n        fontFamily: this.props.settings ? this.props.settings.font : \"sans-serif\",\n        backgroundColor: this.props.settings ? this.props.settings.mode === \"night\" ? \"#484842\" : \"auto\" : \"auto\",\n        minHeight: \"91vh\"\n      };\n\n      if (this.props.settings && this.props.cards) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-sm-12 mobileNoPadding\",\n          style: styleFromSettings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Cards, {\n          expenses: this.props.expenses,\n          authUser: this.props.user,\n          settings: this.props.settings,\n          cards: this.props.cards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), React.createElement(GenerateExcel, {\n          expenses: this.props.expenses,\n          authUser: this.props.user,\n          settings: this.props.settings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), this.state.convertedCurrency ? window.screen.width > 720 ? React.createElement(ExpenseTable, {\n          expenses: this.props.expenses,\n          authUser: this.props.user,\n          settings: this.props.settings,\n          convertedCurrency: this.state.convertedCurrency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }) : React.createElement(MobileExpenseTable, {\n          expenses: this.props.expenses,\n          authUser: this.props.user,\n          settings: this.props.settings,\n          convertedCurrency: this.state.convertedCurrency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }) : React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"addexpense-btn\",\n          onClick: this.togglePopup.bind(this),\n          id: \"addExpense\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-plus-circle fa-5x\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        })), this.state.showPopup ? this.state.convertedCurrency ? React.createElement(AddExpensePopup, {\n          user: this.props.user,\n          closePopup: this.togglePopup.bind(this),\n          settings: this.props.settings,\n          convertedCurrency: this.state.convertedCurrency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }) : React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }) : null);\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport default HomePage;","map":{"version":3,"sources":["G:\\Workspace\\2018\\expense-manager-react\\src\\components\\Home\\index.js"],"names":["React","Component","ExpenseTable","AddExpensePopup","Cards","GenerateExcel","Loader","MobileExpenseTable","analytics","HomePage","props","state","showPopup","convertedCurrency","setState","initGA","logPageView","settings","travelMode","returnCur","cur","fromcur","fromCurrency","tocur","currency","fetch","then","resp","json","data","Object","values","val","catch","alert","styleFromSettings","fontFamily","font","backgroundColor","mode","minHeight","cards","expenses","user","window","screen","width","togglePopup","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport ExpenseTable from \"./ExpenseTable.js\";\r\nimport AddExpensePopup from \"./AddExpensePopup\";\r\nimport Cards from \"./Cards\";\r\nimport GenerateExcel from \"./GenerateExcel\";\r\nimport Loader from \"./../Common/Loader\";\r\n\r\nimport MobileExpenseTable from \"./MobileExpenseTable\";\r\n\r\nimport * as analytics from \"./../../analytics/analytics\";\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { showPopup: false, convertedCurrency: null };\r\n    }\r\n\r\n    togglePopup() {\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        analytics.initGA();\r\n        analytics.logPageView();\r\n\r\n        // if travel mode then convert currency else set to 1\r\n        if (this.props.settings && this.props.settings.travelMode === \"on\") {\r\n            function returnCur(cur) {\r\n                switch (cur) {\r\n                    case \"Indian Rupees\":\r\n                        return \"INR\";\r\n                    case \"US Dollars\":\r\n                        return \"USD\";\r\n                    case \"Pounds\":\r\n                        return \"EUR\";\r\n                    case \"Euro\":\r\n                        return \"EUR\";\r\n                    case \"Yen\":\r\n                        return \"YER\";\r\n                    default:\r\n                        return \"INR\";\r\n                }\r\n            }\r\n\r\n            let fromcur = returnCur(this.props.settings.fromCurrency);\r\n            let tocur = returnCur(this.props.settings.currency);\r\n\r\n            fetch(`https://free.currencyconverterapi.com/api/v5/convert?q=${fromcur}_${tocur}&compact=y`)\r\n                .then(resp => resp.json()) // Transform the data into json\r\n                .then(data => {\r\n                    this.setState({ convertedCurrency: Object.values(data)[0].val });\r\n                })\r\n                .catch(() => {\r\n                    alert(\"Some Problem with the currency converter api. Values will Fallback to default currency\");\r\n                    this.setState({ convertedCurrency: 1 });\r\n                });\r\n        } else {\r\n            this.setState({ convertedCurrency: 1 });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const styleFromSettings = {\r\n            fontFamily: this.props.settings ? this.props.settings.font : \"sans-serif\",\r\n            backgroundColor: this.props.settings ? (this.props.settings.mode === \"night\" ? \"#484842\" : \"auto\") : \"auto\",\r\n            minHeight: \"91vh\"\r\n        };\r\n\r\n        if (this.props.settings && this.props.cards) {\r\n\r\n            return (\r\n                <div>\r\n                    <div className=\"col-sm-12 mobileNoPadding\" style={styleFromSettings}>\r\n                        <Cards\r\n                            expenses={this.props.expenses}\r\n                            authUser={this.props.user}\r\n                            settings={this.props.settings}\r\n                            cards={this.props.cards}\r\n                        />\r\n\r\n                        <GenerateExcel\r\n                            expenses={this.props.expenses}\r\n                            authUser={this.props.user}\r\n                            settings={this.props.settings}\r\n                        />\r\n                        {this.state.convertedCurrency ? (\r\n                            window.screen.width > 720 ? (\r\n                                <ExpenseTable\r\n                                    expenses={this.props.expenses}\r\n                                    authUser={this.props.user}\r\n                                    settings={this.props.settings}\r\n                                    convertedCurrency={this.state.convertedCurrency}\r\n                                />\r\n                            ) : (\r\n                                    <MobileExpenseTable\r\n                                        expenses={this.props.expenses}\r\n                                        authUser={this.props.user}\r\n                                        settings={this.props.settings}\r\n                                        convertedCurrency={this.state.convertedCurrency}\r\n                                    />\r\n                                )\r\n                        ) : (\r\n                                <Loader />\r\n                            )}\r\n                    </div>\r\n                    <button className=\"addexpense-btn\" onClick={this.togglePopup.bind(this)} id=\"addExpense\">\r\n                        <i className=\"fa fa-plus-circle fa-5x\" aria-hidden=\"true\" />\r\n                    </button>\r\n                    {this.state.showPopup ? (\r\n                        this.state.convertedCurrency ? (\r\n                            <AddExpensePopup\r\n                                user={this.props.user}\r\n                                closePopup={this.togglePopup.bind(this)}\r\n                                settings={this.props.settings}\r\n                                convertedCurrency={this.state.convertedCurrency}\r\n                            />\r\n                        ) : (\r\n                                <Loader />\r\n                            )\r\n                    ) : null}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}