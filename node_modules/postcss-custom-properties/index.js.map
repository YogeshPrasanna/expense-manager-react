{"version":3,"file":"index.js","sources":["src/lib/is-ignored.js","src/lib/get-custom-properties-from-root.js","src/lib/get-custom-properties-from-imports.js","src/lib/transform-value-ast.js","src/lib/transform-properties.js","src/lib/write-custom-properties-to-exports.js","src/index.js"],"sourcesContent":["function isBlockIgnored(ruleOrDeclaration) {\n\tvar rule = ruleOrDeclaration.selector ?\n\t\truleOrDeclaration : ruleOrDeclaration.parent;\n\n\treturn /(!\\s*)?postcss-custom-properties:\\s*off\\b/i.test(rule.toString())\n}\n\nfunction isRuleIgnored(rule) {\n\tvar previous = rule.prev();\n\n\treturn Boolean(isBlockIgnored(rule) ||\n\t\tprevious &&\n\t\tprevious.type === 'comment' &&\n\t\t/(!\\s*)?postcss-custom-properties:\\s*ignore\\s+next\\b/i.test(previous.text));\n}\n\nexport {\n\tisBlockIgnored,\n\tisRuleIgnored\n}\n","import valueParser from 'postcss-values-parser';\nimport { isBlockIgnored } from './is-ignored';\n\n// return custom selectors from the css root, conditionally removing them\nexport default function getCustomPropertiesFromRoot(root, opts) {\n\t// initialize custom selectors\n\tconst customPropertiesFromHtmlElement = {};\n\tconst customPropertiesFromRootPsuedo = {};\n\n\t// for each html or :root rule\n\troot.nodes.slice().forEach(rule => {\n\t\tconst customPropertiesObject = isHtmlRule(rule)\n\t\t\t? customPropertiesFromHtmlElement\n\t\t: isRootRule(rule)\n\t\t\t? customPropertiesFromRootPsuedo\n\t\t: null;\n\n\t\t// for each custom property\n\t\tif (customPropertiesObject) {\n\t\t\trule.nodes.slice().forEach(decl => {\n\t\t\t\tif (isCustomDecl(decl) && !isBlockIgnored(decl)) {\n\t\t\t\t\tconst { prop } = decl;\n\n\t\t\t\t\t// write the parsed value to the custom property\n\t\t\t\t\tcustomPropertiesObject[prop] = valueParser(decl.value).parse().nodes;\n\n\t\t\t\t\t// conditionally remove the custom property declaration\n\t\t\t\t\tif (!opts.preserve) {\n\t\t\t\t\t\tdecl.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// conditionally remove the empty html or :root rule\n\t\t\tif (!opts.preserve && isEmptyParent(rule) && !isBlockIgnored(rule)) {\n\t\t\t\trule.remove();\n\t\t\t}\n\t\t}\n\t});\n\n\t// return all custom properties, preferring :root properties over html properties\n\treturn { ...customPropertiesFromHtmlElement, ...customPropertiesFromRootPsuedo };\n}\n\n// match html and :root rules\nconst htmlSelectorRegExp = /^html$/i;\nconst rootSelectorRegExp = /^:root$/i;\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n// whether the node is an html or :root rule\nconst isHtmlRule = node => node.type === 'rule' && htmlSelectorRegExp.test(node.selector) && Object(node.nodes).length;\nconst isRootRule = node => node.type === 'rule' && rootSelectorRegExp.test(node.selector) && Object(node.nodes).length;\n\n// whether the node is an custom property\nconst isCustomDecl = node => node.type === 'decl' && customPropertyRegExp.test(node.prop);\n\n// whether the node is a parent without children\nconst isEmptyParent = node => Object(node.nodes).length === 0;\n","import fs from 'fs';\nimport path from 'path';\nimport postcss from 'postcss';\nimport valueParser from 'postcss-values-parser';\nimport getCustomPropertiesFromRoot from './get-custom-properties-from-root';\n\n/* Get Custom Properties from CSS File\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromCSSFile(from) {\n\tconst css = await readFile(from);\n\tconst root = postcss.parse(css, { from });\n\n\treturn getCustomPropertiesFromRoot(root, { preserve: true });\n}\n\n/* Get Custom Properties from Object\n/* ========================================================================== */\n\nfunction getCustomPropertiesFromObject(object) {\n\tconst customProperties = Object.assign(\n\t\t{},\n\t\tObject(object).customProperties,\n\t\tObject(object)['custom-properties']\n\t);\n\n\tfor (const key in customProperties) {\n\t\tcustomProperties[key] = valueParser(String(customProperties[key])).parse().nodes;\n\t}\n\n\treturn customProperties;\n}\n\n/* Get Custom Properties from JSON file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSONFile(from) {\n\tconst object = await readJSON(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from JS file\n/* ========================================================================== */\n\nasync function getCustomPropertiesFromJSFile(from) {\n\tconst object = await import(from);\n\n\treturn getCustomPropertiesFromObject(object);\n}\n\n/* Get Custom Properties from Imports\n/* ========================================================================== */\n\nexport default function getCustomPropertiesFromImports(sources) {\n\treturn sources.map(source => {\n\t\tif (source instanceof Promise) {\n\t\t\treturn source;\n\t\t} else if (source instanceof Function) {\n\t\t\treturn source();\n\t\t}\n\n\t\t// read the source as an object\n\t\tconst opts = source === Object(source) ? source : { from: String(source) };\n\n\t\t// skip objects with Custom Properties\n\t\tif (opts.customProperties || opts['custom-properties']) {\n\t\t\treturn opts\n\t\t}\n\n\t\t// source pathname\n\t\tconst from = path.resolve(String(opts.from || ''));\n\n\t\t// type of file being read from\n\t\tconst type = (opts.type || path.extname(from).slice(1)).toLowerCase();\n\n\t\treturn { type, from };\n\t}).reduce(async (customProperties, source) => {\n\t\tconst { type, from } = await source;\n\n\t\tif (type === 'css') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromCSSFile(from));\n\t\t}\n\n\t\tif (type === 'js') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSFile(from));\n\t\t}\n\n\t\tif (type === 'json') {\n\t\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromJSONFile(from));\n\t\t}\n\n\t\treturn Object.assign(await customProperties, await getCustomPropertiesFromObject(await source));\n\t}, {});\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nconst readFile = from => new Promise((resolve, reject) => {\n\tfs.readFile(from, 'utf8', (error, result) => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n});\n\nconst readJSON = async from => JSON.parse(await readFile(from));\n","export default function transformValueAST(root, customProperties) {\n\tif (root.nodes && root.nodes.length) {\n\t\troot.nodes.slice().forEach(child => {\n\t\t\tif (isVarFunction(child)) {\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tconst [propertyNode, comma, ...fallbacks] = child.nodes.slice(1, -1);\n\t\t\t\tconst { value: name } = propertyNode;\n\n\t\t\t\tif (name in customProperties) {\n\t\t\t\t\t// conditionally replace a known custom property\n\t\t\t\t\tconst nodes = asClonedArrayWithBeforeSpacing(customProperties[name], child.raws.before);\n\n\t\t\t\t\tchild.replaceWith(...nodes);\n\n\t\t\t\t\tretransformValueAST({ nodes }, customProperties, name);\n\t\t\t\t} else if (fallbacks.length) {\n\t\t\t\t\t// conditionally replace a custom property with a fallback\n\t\t\t\t\tconst index = root.nodes.indexOf(child);\n\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\troot.nodes.splice(index, 1, ...asClonedArrayWithBeforeSpacing(fallbacks, child.raws.before));\n\t\t\t\t\t}\n\n\t\t\t\t\ttransformValueAST(root, customProperties);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttransformValueAST(child, customProperties);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn root;\n}\n\n// retransform the current ast without a custom property (to prevent recursion)\nfunction retransformValueAST(root, customProperties, withoutProperty) {\n\tconst nextCustomProperties = Object.assign({}, customProperties);\n\n\tdelete nextCustomProperties[withoutProperty];\n\n\treturn transformValueAST(root, nextCustomProperties);\n}\n\n// match var() functions\nconst varRegExp = /^var$/i;\n\n// whether the node is a var() function\nconst isVarFunction = node => node.type === 'func' && varRegExp.test(node.value) && Object(node.nodes).length > 0;\n\n// return an array with its nodes cloned, preserving the raw\nconst asClonedArrayWithBeforeSpacing = (array, beforeSpacing) => {\n\tconst clonedArray = asClonedArray(array, null);\n\n\tif (clonedArray[0]) {\n\t\tclonedArray[0].raws.before = beforeSpacing;\n\t}\n\n\treturn clonedArray;\n};\n\n// return an array with its nodes cloned\nconst asClonedArray = (array, parent) => array.map(node => asClonedNode(node, parent));\n\n// return a cloned node\nconst asClonedNode = (node, parent) => {\n\tconst cloneNode = new node.constructor(node);\n\n\tfor (const key in node) {\n\t\tif (key === 'parent') {\n\t\t\tcloneNode.parent = parent;\n\t\t} else if (Object(node[key]).constructor === Array) {\n\t\t\tcloneNode[key] = asClonedArray(node.nodes, cloneNode);\n\t\t} else if (Object(node[key]).constructor === Object) {\n\t\t\tcloneNode[key] = Object.assign({}, node[key]);\n\t\t}\n\t}\n\n\treturn cloneNode;\n};\n","import valueParser from 'postcss-values-parser';\nimport transformValueAST from './transform-value-ast';\nimport { isRuleIgnored } from './is-ignored';\n\n// transform custom pseudo selectors with custom selectors\nexport default (root, customProperties, opts) => {\n\t// walk decls that can be transformed\n\troot.walkDecls(decl => {\n\t\tif (isTransformableDecl(decl) && !isRuleIgnored(decl)) {\n\t\t\tconst originalValue = decl.value;\n\t\t\tconst valueAST = valueParser(originalValue).parse();\n\t\t\tconst value = String(transformValueAST(valueAST, customProperties));\n\n\t\t\t// conditionally transform values that have changed\n\t\t\tif (value !== originalValue) {\n\t\t\t\tif (opts.preserve) {\n\t\t\t\t\tdecl.cloneBefore({ value });\n\t\t\t\t} else {\n\t\t\t\t\tdecl.value = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\n// match custom properties\nconst customPropertyRegExp = /^--[A-z][\\w-]*$/;\n\n// match custom property inclusions\nconst customPropertiesRegExp = /(^|[^\\w-])var\\([\\W\\w]+\\)/;\n\n// whether the declaration should be potentially transformed\nconst isTransformableDecl = decl => !customPropertyRegExp.test(decl.prop) && customPropertiesRegExp.test(decl.value);\n","import fs from 'fs';\nimport path from 'path';\n\n/* Write Custom Properties to CSS File\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToCssFile(to, customProperties) {\n\tconst cssContent = Object.keys(customProperties).reduce((cssLines, name) => {\n\t\tcssLines.push(`\\t${name}: ${customProperties[name]};`);\n\n\t\treturn cssLines;\n\t}, []).join('\\n');\n\tconst css = `:root {\\n${cssContent}\\n}\\n`;\n\n\tawait writeFile(to, css);\n}\n\n/* Write Custom Properties to JSON file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToJsonFile(to, customProperties) {\n\tconst jsonContent = JSON.stringify({\n\t\t'custom-properties': customProperties\n\t}, null, '  ');\n\tconst json = `${jsonContent}\\n`;\n\n\tawait writeFile(to, json);\n}\n\n/* Write Custom Properties to Common JS file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToCjsFile(to, customProperties) {\n\tconst jsContents = Object.keys(customProperties).reduce((jsLines, name) => {\n\t\tjsLines.push(`\\t\\t'${escapeForJS(name)}': '${escapeForJS(customProperties[name])}'`);\n\n\t\treturn jsLines;\n\t}, []).join(',\\n');\n\tconst js = `module.exports = {\\n\\tcustomProperties: {\\n${jsContents}\\n\\t}\\n};\\n`;\n\n\tawait writeFile(to, js);\n}\n\n/* Write Custom Properties to Module JS file\n/* ========================================================================== */\n\nasync function writeCustomPropertiesToMjsFile(to, customProperties) {\n\tconst mjsContents = Object.keys(customProperties).reduce((mjsLines, name) => {\n\t\tmjsLines.push(`\\t'${escapeForJS(name)}': '${escapeForJS(customProperties[name])}'`);\n\n\t\treturn mjsLines;\n\t}, []).join(',\\n');\n\tconst mjs = `export const customProperties = {\\n${mjsContents}\\n};\\n`;\n\n\tawait writeFile(to, mjs);\n}\n\n/* Write Custom Properties to Exports\n/* ========================================================================== */\n\nexport default function writeCustomPropertiesToExports(customProperties, destinations) {\n\treturn Promise.all(destinations.map(async destination => {\n\t\tif (destination instanceof Function) {\n\t\t\tawait destination(defaultCustomPropertiesToJSON(customProperties));\n\t\t} else {\n\t\t\t// read the destination as an object\n\t\t\tconst opts = destination === Object(destination) ? destination : { to: String(destination) };\n\n\t\t\t// transformer for Custom Properties into a JSON-compatible object\n\t\t\tconst toJSON = opts.toJSON || defaultCustomPropertiesToJSON;\n\n\t\t\tif ('customProperties' in opts) {\n\t\t\t\t// write directly to an object as customProperties\n\t\t\t\topts.customProperties = toJSON(customProperties);\n\t\t\t} else if ('custom-properties' in opts) {\n\t\t\t\t// write directly to an object as custom-properties\n\t\t\t\topts['custom-properties'] = toJSON(customProperties);\n\t\t\t} else {\n\t\t\t\t// destination pathname\n\t\t\t\tconst to = String(opts.to || '');\n\n\t\t\t\t// type of file being written to\n\t\t\t\tconst type = (opts.type || path.extname(opts.to).slice(1)).toLowerCase();\n\n\t\t\t\t// transformed Custom Properties\n\t\t\t\tconst customPropertiesJSON = toJSON(customProperties);\n\n\t\t\t\tif (type === 'css') {\n\t\t\t\t\tawait writeCustomPropertiesToCssFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'js') {\n\t\t\t\t\tawait writeCustomPropertiesToCjsFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tawait writeCustomPropertiesToJsonFile(to, customPropertiesJSON);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'mjs') {\n\t\t\t\t\tawait writeCustomPropertiesToMjsFile(to, customPropertiesJSON);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}));\n}\n\n/* Helper utilities\n/* ========================================================================== */\n\nconst defaultCustomPropertiesToJSON = customProperties => {\n\treturn Object.keys(customProperties).reduce((customPropertiesJSON, key) => {\n\t\tcustomPropertiesJSON[key] = String(customProperties[key]);\n\n\t\treturn customPropertiesJSON;\n\t}, {});\n};\n\nconst writeFile = (to, text) => new Promise((resolve, reject) => {\n\tfs.writeFile(to, text, error => {\n\t\tif (error) {\n\t\t\treject(error);\n\t\t} else {\n\t\t\tresolve();\n\t\t}\n\t});\n});\n\nconst escapeForJS = string => string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n","import postcss from 'postcss';\nimport getCustomPropertiesFromRoot from './lib/get-custom-properties-from-root';\nimport getCustomPropertiesFromImports from './lib/get-custom-properties-from-imports';\nimport transformProperties from './lib/transform-properties';\nimport writeCustomPropertiesToExports from './lib/write-custom-properties-to-exports';\n\nexport default postcss.plugin('postcss-custom-properties', opts => {\n\t// whether to preserve custom selectors and rules using them\n\tconst preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : true;\n\n\t// sources to import custom selectors from\n\tconst importFrom = [].concat(Object(opts).importFrom || []);\n\n\t// destinations to export custom selectors to\n\tconst exportTo = [].concat(Object(opts).exportTo || []);\n\n\t// promise any custom selectors are imported\n\tconst customPropertiesPromise = getCustomPropertiesFromImports(importFrom);\n\n\treturn async root => {\n\t\tconst customProperties = Object.assign(\n\t\t\tawait customPropertiesPromise,\n\t\t\tgetCustomPropertiesFromRoot(root, { preserve })\n\t\t);\n\n\t\tawait writeCustomPropertiesToExports(customProperties, exportTo);\n\n\t\ttransformProperties(root, customProperties, { preserve });\n\t};\n});\n"],"names":["isBlockIgnored","ruleOrDeclaration","rule","selector","parent","test","toString","isRuleIgnored","previous","prev","Boolean","type","text","getCustomPropertiesFromRoot","root","opts","customPropertiesFromHtmlElement","customPropertiesFromRootPsuedo","nodes","slice","forEach","customPropertiesObject","isHtmlRule","isRootRule","decl","isCustomDecl","prop","valueParser","value","parse","preserve","remove","isEmptyParent","htmlSelectorRegExp","rootSelectorRegExp","customPropertyRegExp","node","Object","length","getCustomPropertiesFromCSSFile","from","css","readFile","postcss","getCustomPropertiesFromObject","object","customProperties","assign","key","String","getCustomPropertiesFromJSONFile","readJSON","getCustomPropertiesFromJSFile","getCustomPropertiesFromImports","sources","map","source","Promise","Function","path","resolve","extname","toLowerCase","reduce","reject","fs","error","result","JSON","transformValueAST","child","isVarFunction","propertyNode","comma","fallbacks","name","asClonedArrayWithBeforeSpacing","raws","before","replaceWith","retransformValueAST","index","indexOf","splice","withoutProperty","nextCustomProperties","varRegExp","array","beforeSpacing","clonedArray","asClonedArray","asClonedNode","cloneNode","constructor","Array","walkDecls","isTransformableDecl","originalValue","valueAST","cloneBefore","customPropertiesRegExp","writeCustomPropertiesToCssFile","to","cssContent","keys","cssLines","push","join","writeFile","writeCustomPropertiesToJsonFile","jsonContent","stringify","json","writeCustomPropertiesToCjsFile","jsContents","jsLines","escapeForJS","js","writeCustomPropertiesToMjsFile","mjsContents","mjsLines","mjs","writeCustomPropertiesToExports","destinations","all","destination","defaultCustomPropertiesToJSON","toJSON","customPropertiesJSON","string","replace","plugin","importFrom","concat","exportTo","customPropertiesPromise","transformProperties"],"mappings":"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"}